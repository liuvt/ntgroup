<AuthorizeView>
    <Authorized>
        <MudMenu Dense="true">
            <ActivatorContent>
                <MudAvatar>
                    <MudImage Style="height:50px; width:50px; font-size:2rem;" Src="imgs/photos/avartar.jpg" />
                </MudAvatar>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem Href="/faq" Icon="@Icons.Material.Filled.Help" IconColor="Color.Secondary" Label="Trợ giúp" />
                <MudMenuItem @onclick="@(()=> Logout_Click())" Icon="@Icons.Material.Filled.Logout" IconColor="Color.Error" Label="Đăng xuất" />
            </ChildContent>
        </MudMenu>
    </Authorized>
    <NotAuthorized>
        <MudLink Href="/login" Underline="Underline.None" Color="Color.Primary">
            <MudItem Class="d-none d-md-flex">
                <MudText>Đăng nhập</MudText>
            </MudItem>
        </MudLink>
    </NotAuthorized>
</AuthorizeView>

@code {

    [Inject]
    IAuthenService authService { get; set; }
    [Inject]
    NavigationManager nav { get; set; }
    //Hiển thị thông báo khi add/update/deleted category
    [Inject]
    ISnackbar snackBar { get; set; }

    async Task Logout_Click()
    {
        try
        {
            await this.authService.LogOut();

            snackBar.Add($"Đã đăng xuất thành công.", Severity.Success);
            //Chuyển về trang chủ
            nav.NavigateTo("/", true);
        }
        catch (Exception ex)
        {
            snackBar.Add($"Lỗi: {ex.Message}.", Severity.Error);
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        try
        {
            if (firstRender) await authService.GetAuthenState();
        }
        catch (Exception ex)
        {
            await authService.LogOut();
            throw new Exception("Authentication error: " + ex.Message);
        }
    }
}